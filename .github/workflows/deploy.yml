name: Deploy to EC2 on Push to master

on:
  push:
    branches: [master]

jobs:
  docker:
    name: Build container image and push to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}:latest
  ec2:
    needs: [docker]
    name: Connect to EC2 instance and deploy the Docker image
    runs-on: ubuntu-latest
    env:
      EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_URL: ${{ secrets.EC2_PUBLIC_DNS }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
    steps:
      - name: Setup SSH for EC2
        uses: omarhosny206/setup-ssh-for-ec2@v1.0.0
        with:
          EC2_SSH_PRIVATE_KEY: $EC2_SSH_PRIVATE_KEY
          EC2_URL: $EC2_URL
      - name: Deploy new container image on EC2
        run: |
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_URL /bin/bash << 'EOF'
          sudo docker start postgres_db
          sudo docker stop ${{ secrets.PROJECT_NAME }} || true
          sudo docker rm ${{ secrets.PROJECT_NAME }} || true
          sudo docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }} >/dev/null 2>&1 || true
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
          sudo docker run -d \
              --name ${{ secrets.PROJECT_NAME }} \
              -p 5173:5173 \
              ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.PROJECT_NAME }}
          EOF
